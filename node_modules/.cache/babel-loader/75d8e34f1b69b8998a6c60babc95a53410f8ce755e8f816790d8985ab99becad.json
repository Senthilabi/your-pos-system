{"ast":null,"code":"var _s = $RefreshSig$();\n// src/shared/hooks/useForm.js\nimport { useState, useCallback } from 'react';\nconst useForm = (initialValues = {}, validationRules = {}) => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Validation function\n  const validateField = useCallback((name, value) => {\n    const rules = validationRules[name];\n    if (!rules) return '';\n    for (const rule of rules) {\n      if (rule.required && (!value || value.toString().trim() === '')) {\n        return rule.message || `${name} is required`;\n      }\n      if (rule.minLength && value && value.length < rule.minLength) {\n        return rule.message || `${name} must be at least ${rule.minLength} characters`;\n      }\n      if (rule.maxLength && value && value.length > rule.maxLength) {\n        return rule.message || `${name} must be no more than ${rule.maxLength} characters`;\n      }\n      if (rule.pattern && value && !rule.pattern.test(value)) {\n        return rule.message || `${name} format is invalid`;\n      }\n      if (rule.custom && typeof rule.custom === 'function') {\n        const result = rule.custom(value, values);\n        if (result !== true) {\n          return typeof result === 'string' ? result : rule.message || `${name} is invalid`;\n        }\n      }\n    }\n    return '';\n  }, [validationRules, values]);\n\n  // Validate all fields\n  const validateForm = useCallback(() => {\n    const newErrors = {};\n    let isValid = true;\n    Object.keys(validationRules).forEach(name => {\n      const error = validateField(name, values[name]);\n      if (error) {\n        newErrors[name] = error;\n        isValid = false;\n      }\n    });\n    setErrors(newErrors);\n    return isValid;\n  }, [values, validateField]);\n\n  // Handle input change\n  const handleChange = useCallback((name, value) => {\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  }, [errors]);\n\n  // Handle input blur\n  const handleBlur = useCallback(name => {\n    setTouched(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    const error = validateField(name, values[name]);\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  }, [validateField, values]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(async onSubmit => {\n    setIsSubmitting(true);\n\n    // Mark all fields as touched\n    const allTouched = {};\n    Object.keys(validationRules).forEach(name => {\n      allTouched[name] = true;\n    });\n    setTouched(allTouched);\n    const isValid = validateForm();\n    if (isValid && onSubmit) {\n      try {\n        await onSubmit(values);\n      } catch (error) {\n        console.error('Form submission error:', error);\n      }\n    }\n    setIsSubmitting(false);\n    return isValid;\n  }, [values, validateForm, validationRules]);\n\n  // Reset form\n  const reset = useCallback((newValues = initialValues) => {\n    setValues(newValues);\n    setErrors({});\n    setTouched({});\n    setIsSubmitting(false);\n  }, [initialValues]);\n\n  // Set field value\n  const setFieldValue = useCallback((name, value) => {\n    handleChange(name, value);\n  }, [handleChange]);\n\n  // Set field error\n  const setFieldError = useCallback((name, error) => {\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  }, []);\n  return {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    reset,\n    setFieldValue,\n    setFieldError,\n    validateForm,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n_s(useForm, \"99qxVBuNttZ9Lm0dsjGa+m3npqA=\");\nexport default useForm;","map":{"version":3,"names":["useState","useCallback","useForm","initialValues","validationRules","_s","values","setValues","errors","setErrors","touched","setTouched","isSubmitting","setIsSubmitting","validateField","name","value","rules","rule","required","toString","trim","message","minLength","length","maxLength","pattern","test","custom","result","validateForm","newErrors","isValid","Object","keys","forEach","error","handleChange","prev","handleBlur","handleSubmit","onSubmit","allTouched","console","reset","newValues","setFieldValue","setFieldError"],"sources":["C:/Users/senth/Documents/GitHub/your-pos-system/src/shared/hooks/useForm.js"],"sourcesContent":["// src/shared/hooks/useForm.js\r\nimport { useState, useCallback } from 'react';\r\n\r\nconst useForm = (initialValues = {}, validationRules = {}) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Validation function\r\n  const validateField = useCallback((name, value) => {\r\n    const rules = validationRules[name];\r\n    if (!rules) return '';\r\n\r\n    for (const rule of rules) {\r\n      if (rule.required && (!value || value.toString().trim() === '')) {\r\n        return rule.message || `${name} is required`;\r\n      }\r\n      \r\n      if (rule.minLength && value && value.length < rule.minLength) {\r\n        return rule.message || `${name} must be at least ${rule.minLength} characters`;\r\n      }\r\n      \r\n      if (rule.maxLength && value && value.length > rule.maxLength) {\r\n        return rule.message || `${name} must be no more than ${rule.maxLength} characters`;\r\n      }\r\n      \r\n      if (rule.pattern && value && !rule.pattern.test(value)) {\r\n        return rule.message || `${name} format is invalid`;\r\n      }\r\n      \r\n      if (rule.custom && typeof rule.custom === 'function') {\r\n        const result = rule.custom(value, values);\r\n        if (result !== true) {\r\n          return typeof result === 'string' ? result : rule.message || `${name} is invalid`;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return '';\r\n  }, [validationRules, values]);\r\n\r\n  // Validate all fields\r\n  const validateForm = useCallback(() => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    Object.keys(validationRules).forEach(name => {\r\n      const error = validateField(name, values[name]);\r\n      if (error) {\r\n        newErrors[name] = error;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  }, [values, validateField]);\r\n\r\n  // Handle input change\r\n  const handleChange = useCallback((name, value) => {\r\n    setValues(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  }, [errors]);\r\n\r\n  // Handle input blur\r\n  const handleBlur = useCallback((name) => {\r\n    setTouched(prev => ({ ...prev, [name]: true }));\r\n    \r\n    const error = validateField(name, values[name]);\r\n    setErrors(prev => ({ ...prev, [name]: error }));\r\n  }, [validateField, values]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = useCallback(async (onSubmit) => {\r\n    setIsSubmitting(true);\r\n    \r\n    // Mark all fields as touched\r\n    const allTouched = {};\r\n    Object.keys(validationRules).forEach(name => {\r\n      allTouched[name] = true;\r\n    });\r\n    setTouched(allTouched);\r\n    \r\n    const isValid = validateForm();\r\n    \r\n    if (isValid && onSubmit) {\r\n      try {\r\n        await onSubmit(values);\r\n      } catch (error) {\r\n        console.error('Form submission error:', error);\r\n      }\r\n    }\r\n    \r\n    setIsSubmitting(false);\r\n    return isValid;\r\n  }, [values, validateForm, validationRules]);\r\n\r\n  // Reset form\r\n  const reset = useCallback((newValues = initialValues) => {\r\n    setValues(newValues);\r\n    setErrors({});\r\n    setTouched({});\r\n    setIsSubmitting(false);\r\n  }, [initialValues]);\r\n\r\n  // Set field value\r\n  const setFieldValue = useCallback((name, value) => {\r\n    handleChange(name, value);\r\n  }, [handleChange]);\r\n\r\n  // Set field error\r\n  const setFieldError = useCallback((name, error) => {\r\n    setErrors(prev => ({ ...prev, [name]: error }));\r\n  }, []);\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    touched,\r\n    isSubmitting,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    reset,\r\n    setFieldValue,\r\n    setFieldError,\r\n    validateForm,\r\n    isValid: Object.keys(errors).length === 0\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}