{"ast":null,"code":"var _s = $RefreshSig$();\n// src/shared/hooks/useNotification.js\nimport { useCallback } from 'react';\nimport { useGlobalState } from '../context/GlobalStateProvider';\nconst useNotification = () => {\n  _s();\n  const {\n    dispatch,\n    ActionTypes\n  } = useGlobalState();\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const notification = {\n      id: `notification-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      message,\n      type,\n      timestamp: new Date(),\n      duration\n    };\n    dispatch({\n      type: ActionTypes.ADD_NOTIFICATION,\n      payload: notification\n    });\n\n    // Auto-remove notification after duration\n    if (duration > 0) {\n      setTimeout(() => {\n        dispatch({\n          type: ActionTypes.REMOVE_NOTIFICATION,\n          payload: notification.id\n        });\n      }, duration);\n    }\n    return notification.id;\n  }, [dispatch, ActionTypes]);\n  const removeNotification = useCallback(id => {\n    dispatch({\n      type: ActionTypes.REMOVE_NOTIFICATION,\n      payload: id\n    });\n  }, [dispatch, ActionTypes]);\n  const showSuccess = useCallback((message, duration) => {\n    return showNotification(message, 'success', duration);\n  }, [showNotification]);\n  const showError = useCallback((message, duration) => {\n    return showNotification(message, 'error', duration);\n  }, [showNotification]);\n  const showWarning = useCallback((message, duration) => {\n    return showNotification(message, 'warning', duration);\n  }, [showNotification]);\n  const showInfo = useCallback((message, duration) => {\n    return showNotification(message, 'info', duration);\n  }, [showNotification]);\n  return {\n    showNotification,\n    removeNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo\n  };\n};\n_s(useNotification, \"OycQpnMdqaWk3cL1yUFoh4MvG7Y=\", false, function () {\n  return [useGlobalState];\n});\nexport default useNotification;","map":{"version":3,"names":["useCallback","useGlobalState","useNotification","_s","dispatch","ActionTypes","showNotification","message","type","duration","notification","id","Date","now","Math","random","toString","substr","timestamp","ADD_NOTIFICATION","payload","setTimeout","REMOVE_NOTIFICATION","removeNotification","showSuccess","showError","showWarning","showInfo"],"sources":["C:/Users/senth/Documents/GitHub/your-pos-system/src/shared/hooks/useNotification.js"],"sourcesContent":["// src/shared/hooks/useNotification.js\r\nimport { useCallback } from 'react';\r\nimport { useGlobalState } from '../context/GlobalStateProvider';\r\n\r\nconst useNotification = () => {\r\n  const { dispatch, ActionTypes } = useGlobalState();\r\n\r\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\r\n    const notification = {\r\n      id: `notification-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      message,\r\n      type,\r\n      timestamp: new Date(),\r\n      duration\r\n    };\r\n\r\n    dispatch({\r\n      type: ActionTypes.ADD_NOTIFICATION,\r\n      payload: notification\r\n    });\r\n\r\n    // Auto-remove notification after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: ActionTypes.REMOVE_NOTIFICATION,\r\n          payload: notification.id\r\n        });\r\n      }, duration);\r\n    }\r\n\r\n    return notification.id;\r\n  }, [dispatch, ActionTypes]);\r\n\r\n  const removeNotification = useCallback((id) => {\r\n    dispatch({\r\n      type: ActionTypes.REMOVE_NOTIFICATION,\r\n      payload: id\r\n    });\r\n  }, [dispatch, ActionTypes]);\r\n\r\n  const showSuccess = useCallback((message, duration) => {\r\n    return showNotification(message, 'success', duration);\r\n  }, [showNotification]);\r\n\r\n  const showError = useCallback((message, duration) => {\r\n    return showNotification(message, 'error', duration);\r\n  }, [showNotification]);\r\n\r\n  const showWarning = useCallback((message, duration) => {\r\n    return showNotification(message, 'warning', duration);\r\n  }, [showNotification]);\r\n\r\n  const showInfo = useCallback((message, duration) => {\r\n    return showNotification(message, 'info', duration);\r\n  }, [showNotification]);\r\n\r\n  return {\r\n    showNotification,\r\n    removeNotification,\r\n    showSuccess,\r\n    showError,\r\n    showWarning,\r\n    showInfo\r\n  };\r\n};\r\n\r\nexport default useNotification;"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,QAAQ,gCAAgC;AAE/D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAElD,MAAMK,gBAAgB,GAAGN,WAAW,CAAC,CAACO,OAAO,EAAEC,IAAI,GAAG,MAAM,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAChF,MAAMC,YAAY,GAAG;MACnBC,EAAE,EAAE,gBAAgBC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAC3EV,OAAO;MACPC,IAAI;MACJU,SAAS,EAAE,IAAIN,IAAI,CAAC,CAAC;MACrBH;IACF,CAAC;IAEDL,QAAQ,CAAC;MACPI,IAAI,EAAEH,WAAW,CAACc,gBAAgB;MAClCC,OAAO,EAAEV;IACX,CAAC,CAAC;;IAEF;IACA,IAAID,QAAQ,GAAG,CAAC,EAAE;MAChBY,UAAU,CAAC,MAAM;QACfjB,QAAQ,CAAC;UACPI,IAAI,EAAEH,WAAW,CAACiB,mBAAmB;UACrCF,OAAO,EAAEV,YAAY,CAACC;QACxB,CAAC,CAAC;MACJ,CAAC,EAAEF,QAAQ,CAAC;IACd;IAEA,OAAOC,YAAY,CAACC,EAAE;EACxB,CAAC,EAAE,CAACP,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAE3B,MAAMkB,kBAAkB,GAAGvB,WAAW,CAAEW,EAAE,IAAK;IAC7CP,QAAQ,CAAC;MACPI,IAAI,EAAEH,WAAW,CAACiB,mBAAmB;MACrCF,OAAO,EAAET;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAE3B,MAAMmB,WAAW,GAAGxB,WAAW,CAAC,CAACO,OAAO,EAAEE,QAAQ,KAAK;IACrD,OAAOH,gBAAgB,CAACC,OAAO,EAAE,SAAS,EAAEE,QAAQ,CAAC;EACvD,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,MAAMmB,SAAS,GAAGzB,WAAW,CAAC,CAACO,OAAO,EAAEE,QAAQ,KAAK;IACnD,OAAOH,gBAAgB,CAACC,OAAO,EAAE,OAAO,EAAEE,QAAQ,CAAC;EACrD,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,MAAMoB,WAAW,GAAG1B,WAAW,CAAC,CAACO,OAAO,EAAEE,QAAQ,KAAK;IACrD,OAAOH,gBAAgB,CAACC,OAAO,EAAE,SAAS,EAAEE,QAAQ,CAAC;EACvD,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,MAAMqB,QAAQ,GAAG3B,WAAW,CAAC,CAACO,OAAO,EAAEE,QAAQ,KAAK;IAClD,OAAOH,gBAAgB,CAACC,OAAO,EAAE,MAAM,EAAEE,QAAQ,CAAC;EACpD,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,OAAO;IACLA,gBAAgB;IAChBiB,kBAAkB;IAClBC,WAAW;IACXC,SAAS;IACTC,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAACxB,EAAA,CA7DID,eAAe;EAAA,QACeD,cAAc;AAAA;AA8DlD,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}