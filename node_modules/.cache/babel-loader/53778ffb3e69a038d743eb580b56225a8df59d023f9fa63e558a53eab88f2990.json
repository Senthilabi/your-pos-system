{"ast":null,"code":"var _s = $RefreshSig$();\n// src/shared/hooks/usePermissions.js\nimport { useMemo, useCallback } from 'react';\nimport { useGlobalState } from '../context/GlobalStateProvider';\nconst rolePermissions = {\n  admin: ['*'],\n  // Full access\n  manager: ['pos:*', 'inventory:*', 'customers:*', 'reports:read', 'reports:export', 'settings:read'],\n  cashier: ['pos:read', 'pos:create_transaction', 'customers:read', 'customers:create'],\n  viewer: ['pos:read', 'inventory:read', 'customers:read', 'reports:read']\n};\n\n// Helper to get current user from localStorage\nconst getCurrentUser = () => {\n  try {\n    const session = localStorage.getItem('pos-session');\n    if (session) {\n      const {\n        user\n      } = JSON.parse(session);\n      return user;\n    }\n  } catch (error) {\n    console.error('Failed to get current user:', error);\n  }\n  return null;\n};\nconst usePermissions = () => {\n  _s();\n  const {\n    state\n  } = useGlobalState();\n  const currentUser = (state === null || state === void 0 ? void 0 : state.currentUser) || getCurrentUser();\n  const permissions = useMemo(() => {\n    if (!currentUser) return [];\n    const userPermissions = currentUser.permissions || [];\n    const role = currentUser.role;\n    return [...userPermissions, ...(rolePermissions[role] || [])];\n  }, [currentUser]);\n  const hasPermission = useCallback(permission => {\n    if (!currentUser) return false;\n\n    // Admin shortcut\n    if (permissions.includes('*')) return true;\n\n    // Exact permission\n    if (permissions.includes(permission)) return true;\n\n    // Wildcard\n    const [module] = permission.split(':');\n    if (permissions.includes(`${module}:*`)) return true;\n    return false;\n  }, [permissions, currentUser]);\n  const hasRole = useCallback(role => (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === role, [currentUser]);\n  const hasAnyRole = useCallback(roles => roles.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role), [currentUser]);\n  const canAccess = useCallback(module => {\n    return hasPermission(`${module}:read`) || hasPermission(`${module}:*`);\n  }, [hasPermission]);\n  const canModify = useCallback(module => {\n    return hasPermission(`${module}:create`) || hasPermission(`${module}:update`) || hasPermission(`${module}:delete`) || hasPermission(`${module}:*`);\n  }, [hasPermission]);\n  const isAdmin = useCallback(() => hasRole('admin'), [hasRole]);\n  const isManager = useCallback(() => hasRole('manager') || hasRole('admin'), [hasRole]);\n  return {\n    permissions,\n    hasPermission,\n    hasRole,\n    hasAnyRole,\n    canAccess,\n    canModify,\n    isAdmin,\n    isManager,\n    currentUser,\n    isLoggedIn: !!currentUser\n  };\n};\n_s(usePermissions, \"KgYBl2o+MUQ/L7pOu+FLcHTgxoc=\", false, function () {\n  return [useGlobalState];\n});\nexport default usePermissions;","map":{"version":3,"names":["useMemo","useCallback","useGlobalState","rolePermissions","admin","manager","cashier","viewer","getCurrentUser","session","localStorage","getItem","user","JSON","parse","error","console","usePermissions","_s","state","currentUser","permissions","userPermissions","role","hasPermission","permission","includes","module","split","hasRole","hasAnyRole","roles","canAccess","canModify","isAdmin","isManager","isLoggedIn"],"sources":["C:/Users/senth/Documents/GitHub/your-pos-system/src/shared/hooks/usePermissions.js"],"sourcesContent":["// src/shared/hooks/usePermissions.js\r\nimport { useMemo, useCallback } from 'react';\r\nimport { useGlobalState } from '../context/GlobalStateProvider';\r\n\r\nconst rolePermissions = {\r\n  admin: ['*'], // Full access\r\n  manager: [\r\n    'pos:*',\r\n    'inventory:*',\r\n    'customers:*',\r\n    'reports:read',\r\n    'reports:export',\r\n    'settings:read'\r\n  ],\r\n  cashier: [\r\n    'pos:read',\r\n    'pos:create_transaction',\r\n    'customers:read',\r\n    'customers:create'\r\n  ],\r\n  viewer: [\r\n    'pos:read',\r\n    'inventory:read',\r\n    'customers:read',\r\n    'reports:read'\r\n  ]\r\n};\r\n\r\n// Helper to get current user from localStorage\r\nconst getCurrentUser = () => {\r\n  try {\r\n    const session = localStorage.getItem('pos-session');\r\n    if (session) {\r\n      const { user } = JSON.parse(session);\r\n      return user;\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to get current user:', error);\r\n  }\r\n  return null;\r\n};\r\n\r\nconst usePermissions = () => {\r\n  const { state } = useGlobalState();\r\n  const currentUser = state?.currentUser || getCurrentUser();\r\n\r\n  const permissions = useMemo(() => {\r\n    if (!currentUser) return [];\r\n\r\n    const userPermissions = currentUser.permissions || [];\r\n    const role = currentUser.role;\r\n\r\n    return [...userPermissions, ...(rolePermissions[role] || [])];\r\n  }, [currentUser]);\r\n\r\n  const hasPermission = useCallback((permission) => {\r\n    if (!currentUser) return false;\r\n\r\n    // Admin shortcut\r\n    if (permissions.includes('*')) return true;\r\n\r\n    // Exact permission\r\n    if (permissions.includes(permission)) return true;\r\n\r\n    // Wildcard\r\n    const [module] = permission.split(':');\r\n    if (permissions.includes(`${module}:*`)) return true;\r\n\r\n    return false;\r\n  }, [permissions, currentUser]);\r\n\r\n  const hasRole = useCallback((role) => currentUser?.role === role, [currentUser]);\r\n\r\n  const hasAnyRole = useCallback((roles) => roles.includes(currentUser?.role), [currentUser]);\r\n\r\n  const canAccess = useCallback((module) => {\r\n    return hasPermission(`${module}:read`) || hasPermission(`${module}:*`);\r\n  }, [hasPermission]);\r\n\r\n  const canModify = useCallback((module) => {\r\n    return (\r\n      hasPermission(`${module}:create`) ||\r\n      hasPermission(`${module}:update`) ||\r\n      hasPermission(`${module}:delete`) ||\r\n      hasPermission(`${module}:*`)\r\n    );\r\n  }, [hasPermission]);\r\n\r\n  const isAdmin = useCallback(() => hasRole('admin'), [hasRole]);\r\n  const isManager = useCallback(() => hasRole('manager') || hasRole('admin'), [hasRole]);\r\n\r\n  return {\r\n    permissions,\r\n    hasPermission,\r\n    hasRole,\r\n    hasAnyRole,\r\n    canAccess,\r\n    canModify,\r\n    isAdmin,\r\n    isManager,\r\n    currentUser,\r\n    isLoggedIn: !!currentUser\r\n  };\r\n};\r\n\r\nexport default usePermissions;\r\n"],"mappings":";AAAA;AACA,SAASA,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC5C,SAASC,cAAc,QAAQ,gCAAgC;AAE/D,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,CAAC,GAAG,CAAC;EAAE;EACdC,OAAO,EAAE,CACP,OAAO,EACP,aAAa,EACb,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,eAAe,CAChB;EACDC,OAAO,EAAE,CACP,UAAU,EACV,wBAAwB,EACxB,gBAAgB,EAChB,kBAAkB,CACnB;EACDC,MAAM,EAAE,CACN,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,cAAc;AAElB,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAI;IACF,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACnD,IAAIF,OAAO,EAAE;MACX,MAAM;QAAEG;MAAK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;MACpC,OAAOG,IAAI;IACb;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAME,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGjB,cAAc,CAAC,CAAC;EAClC,MAAMkB,WAAW,GAAG,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,WAAW,KAAIZ,cAAc,CAAC,CAAC;EAE1D,MAAMa,WAAW,GAAGrB,OAAO,CAAC,MAAM;IAChC,IAAI,CAACoB,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAME,eAAe,GAAGF,WAAW,CAACC,WAAW,IAAI,EAAE;IACrD,MAAME,IAAI,GAAGH,WAAW,CAACG,IAAI;IAE7B,OAAO,CAAC,GAAGD,eAAe,EAAE,IAAInB,eAAe,CAACoB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,MAAMI,aAAa,GAAGvB,WAAW,CAAEwB,UAAU,IAAK;IAChD,IAAI,CAACL,WAAW,EAAE,OAAO,KAAK;;IAE9B;IACA,IAAIC,WAAW,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;;IAE1C;IACA,IAAIL,WAAW,CAACK,QAAQ,CAACD,UAAU,CAAC,EAAE,OAAO,IAAI;;IAEjD;IACA,MAAM,CAACE,MAAM,CAAC,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC;IACtC,IAAIP,WAAW,CAACK,QAAQ,CAAC,GAAGC,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI;IAEpD,OAAO,KAAK;EACd,CAAC,EAAE,CAACN,WAAW,EAAED,WAAW,CAAC,CAAC;EAE9B,MAAMS,OAAO,GAAG5B,WAAW,CAAEsB,IAAI,IAAK,CAAAH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,IAAI,MAAKA,IAAI,EAAE,CAACH,WAAW,CAAC,CAAC;EAEhF,MAAMU,UAAU,GAAG7B,WAAW,CAAE8B,KAAK,IAAKA,KAAK,CAACL,QAAQ,CAACN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,IAAI,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAE3F,MAAMY,SAAS,GAAG/B,WAAW,CAAE0B,MAAM,IAAK;IACxC,OAAOH,aAAa,CAAC,GAAGG,MAAM,OAAO,CAAC,IAAIH,aAAa,CAAC,GAAGG,MAAM,IAAI,CAAC;EACxE,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnB,MAAMS,SAAS,GAAGhC,WAAW,CAAE0B,MAAM,IAAK;IACxC,OACEH,aAAa,CAAC,GAAGG,MAAM,SAAS,CAAC,IACjCH,aAAa,CAAC,GAAGG,MAAM,SAAS,CAAC,IACjCH,aAAa,CAAC,GAAGG,MAAM,SAAS,CAAC,IACjCH,aAAa,CAAC,GAAGG,MAAM,IAAI,CAAC;EAEhC,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnB,MAAMU,OAAO,GAAGjC,WAAW,CAAC,MAAM4B,OAAO,CAAC,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAC9D,MAAMM,SAAS,GAAGlC,WAAW,CAAC,MAAM4B,OAAO,CAAC,SAAS,CAAC,IAAIA,OAAO,CAAC,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEtF,OAAO;IACLR,WAAW;IACXG,aAAa;IACbK,OAAO;IACPC,UAAU;IACVE,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC,SAAS;IACTf,WAAW;IACXgB,UAAU,EAAE,CAAC,CAAChB;EAChB,CAAC;AACH,CAAC;AAACF,EAAA,CA7DID,cAAc;EAAA,QACAf,cAAc;AAAA;AA8DlC,eAAee,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}